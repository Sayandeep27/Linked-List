#include <bits/stdc++.h>
using namespace std;

class Node{
    
public:

    int data;
    Node* prev;
    Node* next;
    
    Node(int val)
    {
        data=val;
        prev=NULL;
        next==NULL;
    }
    
    
    
};

void insert_at_head(Node* &head,int val)
{
    Node* n=new Node(val);
    
    n->next=head;
    
    if(head!=NULL)
    {
        head->prev=n;
    }
    
    head=n;
}


void insert_at_tail(Node* &head,int val)
{
    if(head==NULL)
    {
        insert_at_head(head,val);
        return;
    }
   
    Node* n=new Node(val);
    Node* temp=head;
    
    while(temp->next!=NULL)
    {
        temp=temp->next;
    }
    
    
    
    temp->next=n;
    n->prev=temp;
}


void display(Node* &head)
{
    Node* temp=head;
    
    while(temp!=NULL)
    {
        cout<<temp->data<<" ";
        temp=temp->next;
    }
    
    cout<<"NULL"<<" ";
}


void insert_at_pos(Node* &head,int val,int pos)
{
    Node* n=new Node(val);
    Node* temp=head;
    Node* po=temp->next;
    
    if(head==NULL || pos==1)
    {
        insert_at_head(head,val);
        return;
    }
   
    int count=2;
    while(count!=pos)
    {
       temp=temp->next;
        if(temp->next==NULL)
    {
        insert_at_tail(head,val);
        return;
    }
       po=po->next;
      count++;
    }
   
    temp->next=n;
    n->prev=temp;
    n->next=po;
    po->prev=n;
    
}




int main()
{
    Node* head=NULL;
    insert_at_tail(head,1);
    insert_at_tail(head,2);
    insert_at_tail(head,3);
    insert_at_tail(head,4);
    insert_at_tail(head,6);
    insert_at_tail(head,7);
    insert_at_pos(head,5,8);
    insert_at_pos(head,8,7);
    display(head);

    return 0;
}
