
class Node{
public:
    
    int val;
    int key;
    Node* next;

    Node(int _key,int _val)
    {
        val=_val;
        key=_key;

        next=NULL;
    }

};



class MyHashMap {
public:

    Node* head=NULL;

    MyHashMap() {
        
    }

    void put(int key, int val) {
        
        Node* curr=head;

        while(curr!=NULL)
        {
            if(curr->key==key)
            {
                curr->val=val;
                return;
            }

            curr=curr->next;
        }


        if(head==NULL)
        {
            head=new Node(key,val);
        }
        else
        {
            Node* node=new Node(key,val);

            node->next=head;
            head=node;
        }

    }
    



    int get(int key) {
        
       Node* curr=head;

       while(curr!=NULL)
       {
           if(curr->key==key)
           {
               return curr->val;
           }

           curr=curr->next;
       }

       return -1;


    }
    


    void remove(int key) {
        
        Node* curr=head;
        Node* prev=NULL;

        while(curr!=NULL)
        {
            if(curr->key==key)
            {
                break;
            }


            prev=curr;
            curr=curr->next;
        }


        if(curr==NULL) return;

        if(prev==NULL)
        {
            head=head->next;
        }
        else
        {
            prev->next=curr->next;
        }

    }
};

/**
 * Your MyHashMap object will be instantiated and called as such:
 * MyHashMap* obj = new MyHashMap();
 * obj->put(key,value);
 * int param_2 = obj->get(key);
 * obj->remove(key);
 */
