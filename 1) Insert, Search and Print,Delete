#include<bits/stdc++.h>
using namespace std;


class node{
  
  public:
    int data;
    node* next;
    
    node(int val)
    {
        data=val;
        next=NULL;
    }
  
    
};


void insert_at_tail(node* &head,int val)
{
    node* n=new node(val);
    
    if(head==NULL)
    {
        head=n;
        return;
    }
    
    node* temp=head;
    
    while(temp->next!=NULL)
    {
        temp=temp->next;
    }
    
    temp->next=n;
    
    
}


void insert_at_head(node* &head,int val)
{
    node* n=new node(val);
    
    n->next=head;
    
    head=n;
}


void display(node* head)
{
    node* temp=head;
    
    while(temp!=NULL)
    {
        cout<<temp->data<<" ";
        
        temp=temp->next;
    }
    
    
    cout<<endl;
    
}

bool search(node* head,int key)
{
    node* temp=head;
    
    while(temp!=NULL)
    {
        if(temp->data==key) return true;
        
        temp=temp->next;
    }
    
    return false;
}


void delete_at_head(node* &head)
{
    node* todelete=head;
    
    head=head->next;
    
    delete todelete;
}

void deletion(node* &head,int val)
{
    if(head==NULL) return; // if empty linked list
    
    if(head->next==NULL)  // if linked list of size 1
    {
        delete_at_head(head);
        
        return;
    }
    
    node* temp=head;
    
    while(temp->next->data!=val)
    {
        temp=temp->next;
    }
    
    node* todelete=temp->next;
    
    temp->next=temp->next->next;
    
    delete todelete;
    
}


int main() {
  
     node* head=NULL;
     
     insert_at_tail(head,10);
     insert_at_tail(head,20);
     insert_at_tail(head,30);
     
     
     display(head);
     
     
     insert_at_head(head,0);
     
     display(head);
     
     
     if(search(head,5)) cout<<"present"<<endl;
     else cout<<"absent"<<endl;
     
     if(search(head,20)) cout<<"present"<<endl;
     else cout<<"absent"<<endl;
     
     deletion(head,10);
     
     display(head);
     
     insert_at_tail(head,10);
     display(head);
     
     delete_at_head(head);
     
     display(head);
     
  
  

    return 0;
}
