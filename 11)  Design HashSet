class Node{
public:
     
     int val;
     Node* next;

     Node(int data)
     {
         val=data;
         next=NULL;
     }

};


class MyHashSet {
public:
    
    Node* head=NULL;


    MyHashSet() {
        
    }
    
    void add(int key) {
        
       Node* curr=head;

       while(curr!=NULL)
       {
           if(curr->val==key) return;

           curr=curr->next;
       }

       Node* node=new Node(key);
       node->next=head;
       head=node;


    }



    
    void remove(int key) {
          
          Node* curr=head;
          Node* prev=NULL;

          while(curr!=NULL)
          {
              if(curr->val==key) break;

              prev=curr;
              curr=curr->next;
          }

          if(curr==NULL) return;

          if(prev==NULL)
          {
              head=head->next;
          }
          else
          {
              prev->next=curr->next;
          }
    }



    
    bool contains(int key) {

        Node* curr=head;

        while(curr!=NULL)
        {
            if(curr->val==key) return true;

            curr=curr->next;
        }      
   
     return false;

    }
};

/**
 * Your MyHashSet object will be instantiated and called as such:
 * MyHashSet* obj = new MyHashSet();
 * obj->add(key);
 * obj->remove(key);
 * bool param_3 = obj->contains(key);
 */
